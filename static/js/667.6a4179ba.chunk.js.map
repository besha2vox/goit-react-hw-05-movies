{"version":3,"file":"static/js/667.6a4179ba.chunk.js","mappings":"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","sources":["API/API.js","components/Cast/Cast.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Message/Message.styled.jsx","components/Message/Message.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesListItem/MoviesListItem.styled.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/AditionalInfo/AdditionalInfo.styled.jsx","components/AditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this._queryToFetch = null;\n    this.BASE_URL = 'https://api.themoviedb.org/3/';\n    this.API_KEY = '9cca312caffd11f4ae9f11244d585025';\n  }\n\n  async basicFetch(url, query) {\n    return await axios(url, {\n      baseURL: this.BASE_URL,\n      params: {\n        api_key: this.API_KEY,\n        [query]: this.queryToFetch,\n      },\n    });\n  }\n\n  async getTrendingMovies() {\n    const url = 'trending/movie/day';\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesByID(id) {\n    const url = `movie/${id}`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesCredits(id) {\n    const url = `movie/${id}/credits`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesReview(id) {\n    const url = `movie/${id}/reviews`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getMoviesByKeyWord() {\n    const url = 'search/movie';\n\n    return await this.basicFetch(url, 'query');\n\n    // const params = new URLSearchParams({\n    //   api_key: this.API_KEY,\n\n    //   query: this._queryToFetch,\n    //   page: this.pageToFetch,\n    // });\n\n    // const url = `${this.BASE_URL}search/movie?${params.toString()}`;\n\n    // return await this.basicFetch(url);\n  }\n\n  get queryToFetch() {\n    return this._queryToFetch;\n  }\n\n  set queryToFetch(keyword) {\n    this._queryToFetch = keyword;\n  }\n}\n\nconst api = new API();\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'API/API';\nimport { List } from 'components/MoviesList/MoviesList.styled';\nimport styled from 'styled-components';\nimport { itemStyles } from 'components/MoviesList/MoviesListItem/MoviesListItem.styled';\nimport Message from 'components/Message';\n\nconst CastItem = styled.li`\n  ${itemStyles}\n`;\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [isCastFetched, setIsCastFetched] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActors = async () => {\n      const { data } = await api.getSearchMoviesCredits(movieId);\n\n      setActors(\n        data.cast.map(({ id, character, name, profile_path }) => ({\n          id,\n          character,\n          name,\n          profile: profile_path\n            ? `https://image.tmdb.org/t/p/original${profile_path}`\n            : 'https://st2.depositphotos.com/1009634/7235/v/950/depositphotos_72350117-stock-illustration-no-user-profile-picture-hand.jpg',\n        }))\n      );\n      setIsCastFetched(true);\n    };\n\n    getActors();\n  }, [movieId]);\n\n  return (\n    <>\n      {!!actors.length && (\n        <List>\n          {actors.map(({ id, character, name, profile }) => (\n            <CastItem key={id}>\n              <img src={profile} alt={name} />\n              <div>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </div>\n            </CastItem>\n          ))}\n        </List>\n      )}\n      {isCastFetched && !actors.length && (\n        <Message text=\"Cast of actors not found\" />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nconst CenteredContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 0 auto;\n  max-width: 1440px;\n`;\n\nexport { CenteredContainer };\n","import { CenteredContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <CenteredContainer>{children}</CenteredContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst Discription = styled.p`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n`;\n\nexport { Discription };\n","import { Discription } from './Message.styled';\nimport PropType from 'prop-types';\n\nconst Message = ({ text }) => {\n  return <Discription>{text}</Discription>;\n};\n\nexport default Message;\n\nMessage.propType = {\n  text: PropType.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 250px);\n  gap: 16px;\n`;\n\nexport { List };\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst itemStyles = css`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  background-color: #ffffff;\n  transition: box-shadow 300ms ease-in-out, transform 300ms ease-in-out;\n  border: 1px solid #2e2e2e70;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & img {\n    object-fit: cover;\n    min-height: 400px;\n  }\n\n  & div {\n    padding: 4px;\n    display: inherit;\n    flex-direction: column;\n    justify-content: end;\n    flex-grow: 1;\n  }\n`;\n\nconst Item = styled.li`\n  ${itemStyles}\n`;\n\nconst ItemLink = styled(Link)`\n  &:hover {\n    box-shadow: 0 0 3px 2px #db8f2cac;\n    transform: scale(1.2);\n  }\n`;\n\nexport { ItemLink, itemStyles, Item };\n","import styled from 'styled-components';\n\nconst ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst ReviewsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  border: 1px solid #2e2e2e70;\n  border-radius: 10px;\n  padding-bottom: 8px;\n  overflow: hidden;\n\n  & div {\n    display: inherit;\n    gap: 8px;\n    align-items: end;\n  }\n\n  & img {\n    display: block;\n    max-width: 150px;\n    max-height: 100px;\n    object-fit: contain;\n  }\n\n  & h3 {\n    border-bottom: 2px solid #2e2e2e70;\n  }\n\n  & p {\n    font-size: 16px;\n    padding: 0 8px;\n    font-weight: 700;\n\n    & span {\n      display: block;\n      font-size: 16px;\n      font-weight: 400;\n    }\n  }\n`;\n\nexport { ReviewsItem, ReviewsList };\n","import { ReviewsItem, ReviewsList } from './Reviews.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'API/API';\nimport Message from 'components/Message';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isReviewsFetched, setIsReviewsFetched] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const { data } = await api.getSearchMoviesReview(movieId);\n\n      setReviews(\n        data.results.map(\n          ({ id, author, author_details: { avatar_path }, content }) => ({\n            id,\n            author,\n            content,\n            avatar:\n              avatar_path && !avatar_path.includes('http')\n                ? `https://image.tmdb.org/t/p/original${avatar_path}`\n                : 'https://st2.depositphotos.com/1009634/7235/v/950/depositphotos_72350117-stock-illustration-no-user-profile-picture-hand.jpg',\n          })\n        )\n      );\n      setIsReviewsFetched(true);\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {!!reviews.length && (\n        <ReviewsList>\n          {reviews.map(({ id, author, content, avatar }) => (\n            <ReviewsItem key={id}>\n              <div>\n                <img src={avatar} alt={author} />\n                <h3>Author: {author}</h3>\n              </div>\n              <p>\n                Review: <span>{content}</span>\n              </p>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      )}\n      {!reviews.length && isReviewsFetched && (\n        <Message text=\"There are no reviews\" />\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst BackButton = styled(Link)`\n  padding: 4px 8px;\n  width: fit-content;\n  display: block;\n  border-radius: 10px;\n  border: 1px solid #2e2e2e70;\n  cursor: pointer;\n  color: #2e2e2e;\n  transition: background-color 300ms ease-in-out;\n\n  &:hover {\n    background-color: #ffa600b9;\n  }\n`;\n\nexport { BackButton };\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 20px;\n\n  & img {\n    display: block;\n    height: auto;\n  }\n`;\n\nconst ContentWrraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  font-weight: 900;\n  text-align: center;\n`;\n\nconst SubTitle = styled.h3`\n  font-size: 20px;\n  font-weight: 700;\n\n  & span {\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst GanreWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: baseline;\n`;\n\nexport { Wrapper, Title, SubTitle, Text, ContentWrraper, GanreWrapper };\n","import {\n  Wrapper,\n  Title,\n  SubTitle,\n  Text,\n  ContentWrraper,\n  GanreWrapper,\n} from './MovieInfo.styled';\nimport PropType from 'prop-types';\n\nconst MovieInfo = ({ movie }) => {\n  const { genres, title, overview, poster, votes } = movie;\n\n  return (\n    <Wrapper>\n      <img width=\"450\" src={poster} alt={title} />\n      <ContentWrraper>\n        <Title>{title}</Title>\n        <div>\n          <SubTitle>Overview</SubTitle>\n          <Text>{overview}</Text>\n        </div>\n        <GanreWrapper>\n          <SubTitle>\n            Genres: <span>{genres}</span>\n          </SubTitle>\n        </GanreWrapper>\n        <SubTitle>\n          Rating: <span>{votes.toFixed(1)}</span>\n        </SubTitle>\n      </ContentWrraper>\n    </Wrapper>\n  );\n};\n\nexport default MovieInfo;\n\nMovieInfo.propType = {\n  movie: PropType.shape({\n    genres: PropType.string.isRequired,\n    title: PropType.string.isRequired,\n    overview: PropType.string.isRequired,\n    poster: PropType.string.isRequired,\n    votes: PropType.number.isRequired,\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst AdditionalList = styled.ul`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  border-bottom: 1px solid #2e2e2e;\n`;\n\nconst AdditionalInfoLink = styled(NavLink)`\n  font-size: 20px;\n  color: #2e2e2e;\n\n  &.active {\n    text-shadow: 0 0 10px #ffa600;\n    font-weight: 700;\n  }\n`;\n\nexport { AdditionalInfoLink, AdditionalList };\n","import { AdditionalInfoLink, AdditionalList } from './AdditionalInfo.styled';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader';\n\nconst AdditionalInfo = () => {\n  return (\n    <>\n      <h3>Additional info:</h3>\n      <AdditionalList>\n        <li>\n          <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n        </li>\n        <li>\n          <AdditionalInfoLink to=\"reviews\">Reviews</AdditionalInfoLink>\n        </li>\n      </AdditionalList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport api from 'API/API';\nimport { BackButton } from './MovieDetails.styled';\nimport MovieInfo from 'components/MovieInfo';\nimport AdditionalInfo from 'components/AditionalInfo/AdditionalInfo';\nimport Reviews from 'components/Reviews';\nimport Cast from 'components/Cast';\nimport Container from 'components/Container';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const {\n        data: { genres, original_title, overview, poster_path, vote_average },\n      } = await api.getSearchMoviesByID(movieId);\n      const movieInfo = {\n        genres: genres.map(({ name }) => name).join(', '),\n        title: original_title,\n        overview: overview,\n        poster: poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg',\n        votes: vote_average,\n      };\n\n      setMovie(movieInfo);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  if (!movie) return;\n\n  return (\n    <main>\n      <Container>\n        <BackButton to={backLink}>{'<- Go back'}</BackButton>\n        <MovieInfo movie={movie} />\n        <AdditionalInfo>\n          <Cast />\n          <Reviews />\n        </AdditionalInfo>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API","this","_queryToFetch","BASE_URL","API_KEY","url","query","axios","baseURL","params","api_key","queryToFetch","basicFetch","id","keyword","api","CastItem","styled","itemStyles","useState","actors","setActors","isCastFetched","setIsCastFetched","movieId","useParams","useEffect","getActors","data","cast","map","character","name","profile_path","profile","length","src","alt","Message","text","CenteredContainer","children","Discription","propType","PropType","List","css","Item","ItemLink","Link","ReviewsList","ReviewsItem","reviews","setReviews","isReviewsFetched","setIsReviewsFetched","getReviews","results","author","avatar_path","author_details","content","avatar","includes","BackButton","Wrapper","ContentWrraper","Title","SubTitle","Text","GanreWrapper","MovieInfo","movie","genres","title","overview","poster","votes","width","toFixed","AdditionalList","AdditionalInfoLink","NavLink","to","Suspense","fallback","Loader","setMovie","backLink","useLocation","state","from","getMovie","original_title","poster_path","vote_average","movieInfo","join","Container","Cast","Reviews"],"sourceRoot":""}