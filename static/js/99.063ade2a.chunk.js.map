{"version":3,"file":"static/js/99.063ade2a.chunk.js","mappings":"+MAEMA,EAAAA,WACJ,cAAe,eACbC,KAAKC,cAAgB,KACrBD,KAAKE,SAAW,gCAChBF,KAAKG,QAAU,kCAChB,CA2DA,OA3DA,qEAED,WAAiBC,EAAKC,GAAtB,kFACeC,EAAAA,EAAAA,GAAMF,EAAK,CACtBG,QAASP,KAAKE,SACdM,QAAO,QACLC,QAAST,KAAKG,SACbE,EAAQL,KAAKU,gBALpB,6IAFC,IAED,kEAUA,oFACc,qBADd,SAGeV,KAAKW,WAFN,sBADd,0IAVA,IAUA,oEAMA,WAA0BC,GAA1B,8EACQR,EADR,gBACuBQ,GADvB,SAGeZ,KAAKW,WAAWP,GAH/B,2IANA,IAMA,uEAMA,WAA6BQ,GAA7B,8EACQR,EADR,gBACuBQ,EADvB,qBAGeZ,KAAKW,WAAWP,GAH/B,2IANA,IAMA,sEAMA,WAA4BQ,GAA5B,8EACQR,EADR,gBACuBQ,EADvB,qBAGeZ,KAAKW,WAAWP,GAH/B,2IANA,IAMA,mEAMA,oFACc,eADd,SAGeJ,KAAKW,WAFN,eAEsB,SAHpC,0IANA,IAMA,wBAiBA,WACE,OAAOX,KAAKC,aACb,MAED,SAAiBY,GACfb,KAAKC,cAAgBY,CACtB,OAhEGd,GAmEAe,EAAM,IAAIf,EAEhB,K,sECrEMgB,E,QAAoBC,GAAAA,IAAH,4H,SCIvB,EAJkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,SAACF,EAAD,UAAoBE,GAC5B,C,sECFKC,E,QAAOF,GAAAA,GAAH,+H,mHCCJG,GAAaC,EAAAA,EAAAA,IAAH,ocAuBVC,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,sHACNG,E,8ECdJ,EAXuB,SAAC,GAA6C,IAA3CI,EAA0C,EAA1CA,QAAgBC,GAA0B,EAAjCC,MAAiC,EAA1BD,OAAaE,GAAa,EAAnBC,KAAmB,EAAbD,QACrD,OACE,UAAC,IAAD,CAAME,GAAE,kBAAaL,GAArB,WACE,gBAAKM,IAAKH,EAAQI,IAAKN,KACvB,0BACE,uBAAIA,QAIX,E,UCSD,EAjBmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACpB,OACE,SAAC,IAAD,UACGA,EAAOC,KAAI,gBAAGpB,EAAH,EAAGA,GAAIa,EAAP,EAAOA,MAAOD,EAAd,EAAcA,MAAOG,EAArB,EAAqBA,KAAMD,EAA3B,EAA2BA,OAA3B,OACV,SAAC,EAAD,CACEH,QAASX,EAETa,MAAOA,EACPD,MAAOA,EACPG,KAAMA,EACND,OAAQA,GAJHd,EAHG,KAYjB,C,gKCuBD,EApCa,WACX,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeG,EAAf,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,iHAEStB,EAAAA,EAAAA,oBAFT,OAERuB,EAFQ,OAGNC,EAAYD,EAASE,KAArBD,QACFE,EAAeF,EAAQN,KAAI,YAAiC,IAA9BpB,EAA6B,EAA7BA,GAAIY,EAAyB,EAAzBA,MAAOiB,EAAkB,EAAlBA,YAC7C,MAAO,CACL7B,GAAAA,EACAY,MAAAA,EACAE,OAAQe,EAAW,6CACuBA,GACtC,uIAEP,IAEDP,EAAUM,GAdI,gDAgBdE,QAAQC,IAAR,MAhBc,yDAAH,qDAoBfP,GACD,GAAE,KAGD,2BACE,SAACQ,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAYd,OAAQA,OAI3B,C","sources":["API/API.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesList/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this._queryToFetch = null;\n    this.BASE_URL = 'https://api.themoviedb.org/3/';\n    this.API_KEY = '9cca312caffd11f4ae9f11244d585025';\n  }\n\n  async basicFetch(url, query) {\n    return await axios(url, {\n      baseURL: this.BASE_URL,\n      params: {\n        api_key: this.API_KEY,\n        [query]: this.queryToFetch,\n      },\n    });\n  }\n\n  async getTrendingMovies() {\n    const url = 'trending/movie/day';\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesByID(id) {\n    const url = `movie/${id}`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesCredits(id) {\n    const url = `movie/${id}/credits`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesReview(id) {\n    const url = `movie/${id}/reviews`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getMoviesByKeyWord() {\n    const url = 'search/movie';\n\n    return await this.basicFetch(url, 'query');\n\n    // const params = new URLSearchParams({\n    //   api_key: this.API_KEY,\n\n    //   query: this._queryToFetch,\n    //   page: this.pageToFetch,\n    // });\n\n    // const url = `${this.BASE_URL}search/movie?${params.toString()}`;\n\n    // return await this.basicFetch(url);\n  }\n\n  get queryToFetch() {\n    return this._queryToFetch;\n  }\n\n  set queryToFetch(keyword) {\n    this._queryToFetch = keyword;\n  }\n}\n\nconst api = new API();\n\nexport default api;\n","import styled from 'styled-components';\n\nconst CenteredContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 0 auto;\n  max-width: 1440px;\n`;\n\nexport { CenteredContainer };\n","import { CenteredContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <CenteredContainer>{children}</CenteredContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 250px);\n  gap: 16px;\n`;\n\nexport { List };\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst itemStyles = css`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  background-color: #ffffff;\n  transition: box-shadow 300ms ease-in-out, transform 300ms ease-in-out;\n  border: 1px solid #2e2e2e70;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & img {\n    object-fit: cover;\n    min-height: 400px;\n  }\n\n  & div {\n    padding: 4px;\n    display: inherit;\n    flex-direction: column;\n    justify-content: end;\n  }\n`;\n\nconst Item = styled(Link)`\n  ${itemStyles}\n\n  &:hover {\n    box-shadow: 0 0 3px 2px #db8f2cac;\n    transform: scale(1.2);\n  }\n`;\n\nexport { Item, itemStyles };\n","import { Item } from './MoviesListItem.styled';\n\nconst MoviesListItem = ({ movieId, votes, title, date, poster }) => {\n  return (\n    <Item to={`/movies/${movieId}`}>\n      <img src={poster} alt={title} />\n      <div>\n        <p>{title}</p>\n      </div>\n    </Item>\n  );\n};\n\nexport default MoviesListItem;\n","import MoviesListItem from './MoviesListItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, votes, title, date, poster }) => (\n        <MoviesListItem\n          movieId={id}\n          key={id}\n          votes={votes}\n          title={title}\n          date={date}\n          poster={poster}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList';\nimport Container from 'components/Container';\nimport api from 'API';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await api.getTrendingMovies();\n        const { results } = response.data;\n        const newMovieList = results.map(({ id, title, poster_path }) => {\n          return {\n            id,\n            title,\n            poster: poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT1Zco_AzlB5030ccqs-SkdHxO_PmzfBw5sjXSKCjfaX46A9-YEg-9_vjqAHsvgQTw3kbw&usqp=CAU',\n          };\n        });\n\n        setMovies(newMovieList);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <MoviesList movies={movies} />\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API","this","_queryToFetch","BASE_URL","API_KEY","url","query","axios","baseURL","params","api_key","queryToFetch","basicFetch","id","keyword","api","CenteredContainer","styled","children","List","itemStyles","css","Item","Link","movieId","title","votes","poster","date","to","src","alt","movies","map","useState","setMovies","useEffect","getMovies","response","results","data","newMovieList","poster_path","console","log","Container","MoviesList"],"sourceRoot":""}