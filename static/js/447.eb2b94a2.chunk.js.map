{"version":3,"file":"static/js/447.eb2b94a2.chunk.js","mappings":"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","sources":["API/API.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Message/Message.styled.jsx","components/Message/Message.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesList/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass API {\n  constructor() {\n    this._queryToFetch = null;\n    this.BASE_URL = 'https://api.themoviedb.org/3/';\n    this.API_KEY = '9cca312caffd11f4ae9f11244d585025';\n  }\n\n  async basicFetch(url, query) {\n    return await axios(url, {\n      baseURL: this.BASE_URL,\n      params: {\n        api_key: this.API_KEY,\n        [query]: this.queryToFetch,\n      },\n    });\n  }\n\n  async getTrendingMovies() {\n    const url = 'trending/movie/day';\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesByID(id) {\n    const url = `movie/${id}`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesCredits(id) {\n    const url = `movie/${id}/credits`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getSearchMoviesReview(id) {\n    const url = `movie/${id}/reviews`;\n\n    return await this.basicFetch(url);\n  }\n\n  async getMoviesByKeyWord() {\n    const url = 'search/movie';\n\n    return await this.basicFetch(url, 'query');\n\n    // const params = new URLSearchParams({\n    //   api_key: this.API_KEY,\n\n    //   query: this._queryToFetch,\n    //   page: this.pageToFetch,\n    // });\n\n    // const url = `${this.BASE_URL}search/movie?${params.toString()}`;\n\n    // return await this.basicFetch(url);\n  }\n\n  get queryToFetch() {\n    return this._queryToFetch;\n  }\n\n  set queryToFetch(keyword) {\n    this._queryToFetch = keyword;\n  }\n}\n\nconst api = new API();\n\nexport default api;\n","import styled from 'styled-components';\n\nconst CenteredContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 0 auto;\n  max-width: 1440px;\n`;\n\nexport { CenteredContainer };\n","import { CenteredContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <CenteredContainer>{children}</CenteredContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst Discription = styled.p`\n  text-align: center;\n  font-size: 28px;\n  font-weight: 700;\n`;\n\nexport { Discription };\n","import { Discription } from './Message.styled';\n\nconst NotFoundPage = ({ text }) => {\n  return <Discription>{text}</Discription>;\n};\n\nexport default NotFoundPage;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 250px);\n  gap: 16px;\n`;\n\nexport { List };\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst itemStyles = css`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  background-color: #ffffff;\n  transition: box-shadow 300ms ease-in-out, transform 300ms ease-in-out;\n  border: 1px solid #2e2e2e70;\n  border-radius: 10px;\n  overflow: hidden;\n\n  & img {\n    object-fit: cover;\n    min-height: 400px;\n  }\n\n  & div {\n    padding: 4px;\n    display: inherit;\n    flex-direction: column;\n    justify-content: end;\n  }\n`;\n\nconst Item = styled(Link)`\n  ${itemStyles}\n\n  &:hover {\n    box-shadow: 0 0 3px 2px #db8f2cac;\n    transform: scale(1.2);\n  }\n`;\n\nexport { Item, itemStyles };\n","import { Item } from './MoviesListItem.styled';\n\nconst MoviesListItem = ({ movieId, votes, title, date, poster }) => {\n  return (\n    <Item to={`/movies/${movieId}`}>\n      <img src={poster} alt={title} />\n      <div>\n        <p>{title}</p>\n      </div>\n    </Item>\n  );\n};\n\nexport default MoviesListItem;\n","import MoviesListItem from './MoviesListItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, votes, title, date, poster }) => (\n        <MoviesListItem\n          movieId={id}\n          key={id}\n          votes={votes}\n          title={title}\n          date={date}\n          poster={poster}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  width: fit-content;\n  margin: 0 auto;\n`;\n\nexport { Form };\n","import { Form } from './SearchForm.styled';\nimport { useState } from 'react';\n\nconst SearchForm = ({ onFormSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handlerChange = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onFormSubmit(query);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input type=\"text\" value={query} onChange={handlerChange} />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport api from 'API/API';\nimport Container from 'components/Container';\nimport SearchForm from 'components/SearchForm';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\n\nconst Movies = () => {\n  const [query, setQuery] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isMovieFetched, setIsMovieFetched] = useState(false);\n\n  useEffect(() => {\n    if (!query || query === api.queryToFetch) return;\n\n    const getMovies = async () => {\n      setLoading(true);\n      api.queryToFetch = query;\n      try {\n        const response = await api.getMoviesByKeyWord();\n        const { results } = response.data;\n        const newMovieList = results.map(({ id, title, poster_path }) => {\n          return {\n            id,\n            title,\n            poster: poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT1Zco_AzlB5030ccqs-SkdHxO_PmzfBw5sjXSKCjfaX46A9-YEg-9_vjqAHsvgQTw3kbw&usqp=CAU',\n          };\n        });\n\n        setIsMovieFetched(true);\n        setMovies(newMovieList);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovies();\n    return () => (api.queryToFetch = null);\n  }, [query]);\n\n  const onFormSubmit = q => {\n    setQuery(q);\n  };\n\n  const isMessegeShow = movies.length < 1 && isMovieFetched;\n\n  return (\n    <main>\n      <Container>\n        <SearchForm onFormSubmit={onFormSubmit} />\n        {!!movies.length && <MoviesList movies={movies} />}\n        {isMessegeShow && <Message text=\"Movies not found. Try again.\" />}\n        {!isMovieFetched && (\n          <Message text=\"Enter the name of the movie to search\" />\n        )}\n        {loading && <Loader />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API","this","_queryToFetch","BASE_URL","API_KEY","url","query","axios","baseURL","params","api_key","queryToFetch","basicFetch","id","keyword","api","CenteredContainer","styled","children","Discription","text","List","itemStyles","css","Item","Link","movieId","title","votes","poster","date","to","src","alt","movies","map","Form","onFormSubmit","useState","setQuery","onSubmit","e","preventDefault","type","value","onChange","target","setMovies","loading","setLoading","isMovieFetched","setIsMovieFetched","useEffect","getMovies","response","results","data","newMovieList","poster_path","console","log","isMessegeShow","length","Container","q","MoviesList","Message","Loader"],"sourceRoot":""}